// <auto-generated />
using System;
using HUDLL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HUDLL.Migrations
{
    [DbContext(typeof(HistoryContext))]
    [Migration("20181216170924_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HUDLL.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventTypeName");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("HUDLL.Models.Figure", b =>
                {
                    b.Property<int>("FigureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FigureType");

                    b.HasKey("FigureId");

                    b.ToTable("Figures");
                });

            modelBuilder.Entity("HUDLL.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("MediaContent");

                    b.Property<DateTime>("PostDate");

                    b.Property<int>("TimePeriodId");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("TimePeriodId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("HUDLL.Models.PostEventType", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("EventTypeId");

                    b.HasKey("PostId", "EventTypeId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("PostEventTypes");
                });

            modelBuilder.Entity("HUDLL.Models.PostFigure", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("FigureId");

                    b.HasKey("PostId", "FigureId");

                    b.HasIndex("FigureId");

                    b.ToTable("PostFigures");
                });

            modelBuilder.Entity("HUDLL.Models.TimePeriod", b =>
                {
                    b.Property<int>("TimePeriodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("ImageContent");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("TimePeriodId");

                    b.ToTable("TimePeriods");
                });

            modelBuilder.Entity("HUDLL.Models.Post", b =>
                {
                    b.HasOne("HUDLL.Models.TimePeriod", "TimePeriod")
                        .WithMany("Posts")
                        .HasForeignKey("TimePeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HUDLL.Models.PostEventType", b =>
                {
                    b.HasOne("HUDLL.Models.EventType", "EventType")
                        .WithMany("PostEventTypes")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HUDLL.Models.Post", "Post")
                        .WithMany("PostEventTypes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HUDLL.Models.PostFigure", b =>
                {
                    b.HasOne("HUDLL.Models.Figure", "Figure")
                        .WithMany("PostFigures")
                        .HasForeignKey("FigureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HUDLL.Models.Post", "Post")
                        .WithMany("PostFigures")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
