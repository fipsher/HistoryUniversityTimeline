@using HU.Models
@using HUDLL.Models
@using HUDLL.ViewModels
@model HU.Models.PostsByPeriodViewModel

@{
    Model.PostsByPeriod = Model.PostsByPeriod ?? new List<PostViewModel>();
    Model.Periods = Model.Periods ?? new List<TimePeriodViewModel>();
    Model.EventTypes = Model.EventTypes ?? new List<EventTypeViewModel>();
    Model.FigureTypes = Model.FigureTypes ?? new List<FigureTypeViewModel>();
    var firstPeriodId = Model.Periods.FirstOrDefault()?.TimePeriodId;
    var firstPeriodStartDate = Model.Periods.FirstOrDefault()?.StartDate;
}

<script type="text/javascript">

    function getRandomColor(i) {
        var colors = ['#ce9e10f7', '#337ab7', '#0A0A2A', '#3c763d'];
        return colors[i % colors.length];

    }

    function modalDialog(id) {
        $.ajax({
            type: "GET",
            url: '/api/LNU/PostsById?postId=' + id,
            data: param = "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(post) {
                if (post.image) {
                    $("#modal-image").attr("src", "data:image/png;base64," + post.image);
                }

                $("#modal-content").text(post.content);

                $("#modal-title").text(post.title);
                $('#myModal').modal('show');
            }
        });
    }


    $(function() {
        var periods = @Html.Raw(Json.Serialize(Model.Periods));
        var formattedPeriods = [];
        var selectedEventType = '';
        var selectedPersonaType = '';
        var selectedPeriod = '';
        var searchValue = '';

        function filterPosts(startDate, periodId) {
            var periodStartDate = '';

            $.each(periods,
                function(i, item) {
                    if (periodId == item.timePeriodId) {
                        periodStartDate = item.startDate;
                        return;
                    }
                });

            $('#itemList li').each(function(i, obj) {
                $(obj).css("display", "block");
                if ($(obj).attr("data") < startDate || $(obj).attr("time") !== periodId) {
                    $(obj).css("display", "none");
                }
                if (selectedEventType) {
                    if ($(obj).attr("event").indexOf("-" + selectedEventType + "-") < 0) {
                        $(obj).css("display", "none");
                    }
                }
                if (selectedPersonaType) {
                    if ($(obj).attr("persona").indexOf("-" + selectedPersonaType + "-") < 0) {
                        $(obj).css("display", "none");
                    }
                }
                if (searchValue && searchValue !== "") {

                    if ($(obj).attr("search-criteria").indexOf(searchValue) < 0) {
                        $(obj).css("display", "none");
                    }
                }
            });
            var backgroundUrl = '/Content/Images/' + new Date(periodStartDate).getFullYear() + '.png';
            $("#background").css("background", "url('" + backgroundUrl + "')");
            $("#background").css("background-repeat", "no-repeat");
            $("#background").css("background-size", "cover");
            $("#background").css("background-position", "center center");
        }

        $.each(periods,
            function(i, item) {
                formattedPeriods.push({
                    name: item.name,
                    start: new Date(item.startDate).getFullYear(),
                    end: new Date(item.endDate).getFullYear(),
                    color: getRandomColor(i),
                    timeId: item.timePeriodId,
                    size: 10
                });
            });


        $("#range").rangeRover({
            range: true,
            mode: 'categorized',
            data: formattedPeriods,
            onChange: function(val) {

                filterPosts(val.start.value, val.start.timeId);
            }
        });

        $("#EventTypes").change(function() {
            selectedEventType = $(this).find(':selected').val();
            var firstSearchYear = 0;
            var firstSearchPeriod = 0;
            $('#itemList li').each(function(i, obj) {

                if ($(obj).attr("search-criteria").indexOf(searchValue) >= 0 &&
                    (selectedPeriod === "" || selectedPeriod === $(obj).attr("time")) &&
                    (selectedEventType === "" || $(obj).attr("event").indexOf("-" + selectedEventType + "-") >= 0) &&
                    (selectedPersonaType === "" ||
                        $(obj).attr("persona").indexOf("-" + selectedPersonaType + "-") >= 0)) {

                    firstSearchYear = $(obj).attr("data");
                    firstSearchPeriod = $(obj).attr("time");
                    return false;
                }
            });
            if (firstSearchYear !== 0) {
                var start_year_first = $(".ds-progress .ds-category:first .ds-category-start").text();
                var width = $(".ds-progress .ds-category:first .ds-item:first")[0].getBoundingClientRect().width *
                    (firstSearchYear - start_year_first);
                $(".ds-skate").css("left", width);
                $(".ds-skate-year-mark").text(firstSearchYear);
                filterPosts(firstSearchYear, firstSearchPeriod);
            } else {
                filterPosts("@firstPeriodStartDate", "@firstPeriodId");
            }


        });

        $("#PersonaTypes").change(function() {
            selectedPersonaType = $(this).find(':selected').val();
            var firstSearchYear = 0;
            var firstSearchPeriod = 0;
            $('#itemList li').each(function(i, obj) {

                if ($(obj).attr("search-criteria").indexOf(searchValue) >= 0 &&
                    (selectedPeriod === "" || selectedPeriod === $(obj).attr("time")) &&
                    (selectedEventType === "" || $(obj).attr("event").indexOf("-" + selectedEventType + "-") >= 0) &&
                    (selectedPersonaType === "" ||
                        $(obj).attr("persona").indexOf("-" + selectedPersonaType + "-") >= 0)) {

                    firstSearchYear = $(obj).attr("data");
                    firstSearchPeriod = $(obj).attr("time");
                    return false;
                }
            });
            if (firstSearchYear !== 0) {
                var start_year_first = $(".ds-progress .ds-category:first .ds-category-start").text();
                var width = $(".ds-progress .ds-category:first .ds-item:first")[0].getBoundingClientRect().width *
                    (firstSearchYear - start_year_first);
                $(".ds-skate").css("left", width);
                $(".ds-skate-year-mark").text(firstSearchYear);
                filterPosts(firstSearchYear, firstSearchPeriod);
            } else {
                filterPosts("@firstPeriodStartDate", "@firstPeriodId");
            }
        });

        $("#Periods").change(function() {
            selectedPeriod = $(this).find(':selected').val();
            var start_year_period = $(".ds-progress > #" + selectedPeriod + "> .ds-category-start").text();
            var start_year_first = $(".ds-progress .ds-category:first .ds-category-start").text();
            var width = $(".ds-progress .ds-category:first .ds-item:first")[0].getBoundingClientRect().width *
                (start_year_period - start_year_first);
            $(".ds-skate").css("left", width);
            $(".ds-skate-year-mark").text(start_year_period);
            filterPosts(start_year_period, selectedPeriod);

        });


        $("#search-area").on("keyup",
            function() {
                searchValue = $("#search-area").val();
                var firstSearchYear = 0;
                var firstSearchPeriod = 0;
                $('#itemList li').each(function(i, obj) {

                    if ($(obj).attr("search-criteria").indexOf(searchValue) >= 0 &&
                        (selectedPeriod === "" || selectedPeriod === $(obj).attr("time")) &&
                        (selectedEventType === "" || $(obj).attr("event").indexOf("-" + selectedEventType + "-") >= 0
                        ) &&
                        (selectedPersonaType === "" ||
                            $(obj).attr("persona").indexOf("-" + selectedPersonaType + "-") >= 0)) {

                        firstSearchYear = $(obj).attr("data");
                        firstSearchPeriod = $(obj).attr("time");
                        return false;
                    }
                });
                if (firstSearchYear !== 0) {
                    var start_year_first = $(".ds-progress .ds-category:first .ds-category-start").text();
                    var width = $(".ds-progress .ds-category:first .ds-item:first")[0].getBoundingClientRect().width *
                        (firstSearchYear - start_year_first);
                    $(".ds-skate").css("left", width);
                    $(".ds-skate-year-mark").text(firstSearchYear);
                    filterPosts(firstSearchYear, firstSearchPeriod);
                } else {
                    filterPosts("@firstPeriodStartDate", "@firstPeriodId");
            }
        });


        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-36251023-1']);
        _gaq.push(['_setDomainName', 'jqueryscript.net']);
        _gaq.push(['_trackPageview']);

        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' === document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    });
</script>

<style type="text/css">

    .modal-body {
        max-height: 600px;
        overflow-y: auto;
    }

    .footer-info__contacts {
        float: left;
        width: 25%;
        margin: 10px 25% 0 10px;
        font-family: 'proxima_nova_rgregular',Arial,sans-serif;
        font-size: 13px;
        color: #fff;
        line-height: 1.2;
    }

    .postImage {
        max-width: 200px;
        max-height: 300px;
        float: right;
    }

    #modal-image {
        max-width: 100%;
        max-height: 550px;
        display:block;
        margin:auto;
    }

    .post {
        max-width: 150px;
        max-height: 200px;
        background: rgba(0,0,0,0.5);
        color: white;
        font-size: 1.1em
    }

    .item {
        max-width: 450px !important;
        margin: 30px;
    }

    #itemList {
        max-width: 100%;
        height: 100%;
        overflow-x: hidden;
        overflow-y: hidden;
    }

    /* width */
    ::-webkit-scrollbar {
        width: 20px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 5px grey;
        border-radius: 10px;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #d3d3d3;
        border-radius: 10px;
    }

    #itemList {
        visibility: visible;
    }

    html, body {
        text-align: center;
        height: 100%;
        background: #eeedec;
    }

    #range {
        max-width: 94%;
        margin-top: 50px;
        margin: 0 3%;
    }

    #background {
        width: 100%;
        vertical-align: middle;
    }

    .cut-text {
        text-overflow: ellipsis;
        overflow: hidden;
        height: 1.2em;
    }

    #logo {
        line-height: 0;
        width: 12%;
    }

        #logo img {
            max-width: 100%;
            height: auto;
        }

    #content {
        margin-top: 3.5%;
        display: inline-block;
        width: 100%;
        height: 70%;
        background-color: rgba(0,0,0,0.5);
    }

    #rangeScroll {
        margin-top: 3%;
        margin-bottom: 3%;
        display: inline-block;
        width: 96%;
        height: 10%;
        background-color: rgba(0,0,0,0.5);
        color: white;
    }

    .red-line {
        background: #002462;
        min-height: 15px;
        position: relative;
    }

    .blockquote {
        display: flex;
        color: white;
        font-family: arial;
        font-size: 17px;
        font-style: italic;
        text-align: center;
        margin: 0px 0px;
        position: relative;
        width: 60%;
        margin-left: 13%;
    }

    .bottom {
        width: 100%;
        height: 200px;
        padding-top: 1.5%;
        background-color: white
    }

    .bottom_center {
        width: 60%;
        height: 100%;
        margin-left: 20%;
    }

    .avtor {
        float: left;
        width: 39.5%;
        height: 100%;
        background-color: #d9edf7;
        border-top-left-radius: 20px;
    }

    .about {
        float: left;
        width: 60%;
        height: 100%;
        background-color: #d9edf7;
        border-top-right-radius: 20px;
    }

    a {
        margin-left: 2%;
        text-decoration: none;
    }

    .st {
        text-align: center;
        font-style: italic;
        font-size: 24px;
        margin-left: 1px;
    }

    .navbar-brand {
        padding: 0;
    }
</style>

<!doctype html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
</head>
<body>
    <nav class="navbar navbar-expand-lg" style="background-color: #002462; margin: 0; height: 10%">
        @*<div class="container-fluid" style="display: table">*@
        <a class="navbar-brand" href="#">
            <img src="http://www.lnu.edu.ua/wp-content/uploads/2015/01/%D0%B3%D0%B5%D1%80%D0%B1.jpg" width="50" height="50" class="d-inline-block align-top" alt="">

        </a>
        <a class="navbar-brand" style="font-family: Slabo; color: white; font-size: 1.5em; margin-left: 0px" href="#">

            <span><b>ІСТОРІЯ УНІВЕРСИТЕТУ</b><br>з минулого у сьогодення</span>
        </a>


        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">


            <ul class="nav navbar-nav mr-auto">
                <li class="nav-item dropdown" style="margin-right: 5px; width: 30%;">
                    @Html.DropDownList("Periods",
                        new SelectList(
                            Model.Periods.Select(x => new { Value = x.TimePeriodId, Text = x.Name }),
                            "Value",
                            "Text", new { @year = Model.Periods.Select(x=>x.StartDate.Year) }
                            ),
                        "Усі періоди",
                        new {@class = "form-control" })
                </li>

                <li class="nav-item dropdown" style="margin-right: 5px;width: 20%">
                    @Html.DropDownList("EventTypes",
                        new SelectList(
                            Model.EventTypes.Select(x => new {Value = x.EventTypeId, Text = x.EventTypeName}),
                            "Value",
                            "Text"
                            ),
                        "Усі події",
                        new {@class = "form-control"})
                </li>
                <li class="nav-item dropdown" style="margin-right: 5px;width: 20%">
                    @Html.DropDownList("PersonaTypes",
                        new SelectList(
                            Model.FigureTypes.Select(x => new {Value = x.FigureTypeId, Text = x.FigureTypeName}),
                            "Value",
                            "Text"
                            ),
                        "Усі персони",
                        new {@class = "form-control"})
                </li>

            </ul>
            <form class="form-inline my-2 my-lg-0">

                <input class="form-control mr-sm-2" id="search-area" placeholder="Пошук">
            </form>
        </div><!-- /.navbar-collapse -->

    </nav>
    <div id="background" style="background-repeat: no-repeat; background: url('@Url.Content("~/Content/Images/1661.png")'); background-size: cover; background-position: center center; width: 100%; height: 80%; opacity: 1; visibility: inherit;">
        <div id="content">
            <ul id="itemList" style="display: inline-flex">
                @{
                    var topIndex = new[] { 10, 70, 40, 100 };
                    var i = 0;
                    foreach (var post in Model.PostsByPeriod)
                    {
                        var random = topIndex[i % topIndex.Length] + "px";
                        var displayCss = "inline";
                        if (post.TimePeriodId != firstPeriodId)
                        {
                            displayCss = "none";
                        }
                        i++;
                        var content = post.Content;
                        if (content.Length > 120)
                        {
                            content = content.Substring(0, 200) + "...";
                        }

                        var personaType = "";
                        foreach (var figure in post.FigureTypes)
                        {
                            personaType += "-" + figure + "-";
                        }


                        var eventType = "";
                        foreach (var eventId in post.EventTypes)
                        {
                            eventType += "-" + eventId + "-";
                        }

                        <li class="item" style="display: @displayCss" search-criteria="@post.Title" time="@post.TimePeriodId" event='@eventType' persona='@personaType' data="@post.PostDate.Year">
                            <div class="row" style="margin-top:@random">
                                <div class="pull-left col-md-7 col-7 col-sm-7 " style="padding: 0; margin: 0">
                                    @if (!String.IsNullOrEmpty(post.Image))
                                    {
                                        <img class="postImage" src="data:image/png;base64,@post.Image" alt="post img">
                                    }
                                </div>

                                <div class="pull-left post col-md-5 col-5 col-sm-5">
                                    <h4 class="bold">
                                        @post.Title
                                    </h4>
                                    <p>@content </p>
                                    <p style="display: flex"><span class="glyphicon glyphicon-circle-arrow-right" style="flex: 1;text-align: right" onclick="modalDialog('@post.PostId') "></span></p>

                                </div>
                            </div>
                        </li>

                    }
                }
            </ul>
        </div>
        <div id="rangeScroll">
            <div id="range"></div>
        </div>
    </div>
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="modal-title"></h5>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <img id="modal-image" src="">
                    <p id="modal-content"></p>

                </div>


                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Закрити</button>
                </div>

            </div>
        </div>
    </div>
    <!-- Footer -->
    <!--Carousel Wrapper-->
    <div class="red-line"></div>
    <div style=" background-color: #002462; ">
        <div class="blockquote" style="text-align: center">
            <h3>
                "У Львові, столиці Галицької Руси, в центрі національного, культурного життя, в теперішніх обставинах не лише австрійської, а цілої України-Руси, від Сяна до Кубані, в першій лінії мусить бути задоволена ця потреба українсько-руського народу. Львівський університет належиться русинам!"
                <br />  "Михайло Грушевський"
            </h3>
            <img src="https://avatanplus.com/files/resources/mid/5b890c49b04d61658f57fffa.png" style="  max-height: 150px; position: absolute; margin-left: 100%; ">
        </div>
    </div>


    <div class="bottom">
        <div class="bottom_center">
            <div class="avtor">
                <div class="st">Автори</div>
                <div>
                    <a href="mailto:oksana.medvid14@gmail.com">
                        oksana.medvid14@gmail.com
                    </a><br>
                    <a href="mailto:ira.vasylyk13@gmail.com">
                        ira.vasylyk13@gmail.com
                    </a><br>
                    <a href="mailto:tamara.shyika@gmail.com">
                        tamara.shyika@gmail.com
                    </a><br>
                    <a href="mailto:zherebetskiy00@gmail.com">
                        zherebetskiy00@gmail.com
                    </a><br>
                    <a href="mailto:rusa1234527@gmail.com">
                        rusa1234527@gmail.com
                    </a><br>

                </div>
            </div>
            <div style="float: left; width: 1px; height: 100%; background-color: black;"></div>
            <div class="about">
                <div class="st">Про проект</div>
                <div>
                    <a href="">
                        © ЛНУ імені Івана Франка
                    </a><br>
                    <a href="https://maps.google.com/maps?q=%D0%B2%D1%83%D0%BB.+%D0%A3%D0%BD%D1%96%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82%D1%81%D1%8C%D0%BA%D0%B0+1%2C+%D0%BC.%C2%A0%D0%9B%D1%8C%D0%B2%D1%96%D0%B2%2C+79000" target="_blank" rel="nofollow">вул. Університетська 1, м.&nbsp;Львів, 79000</a>
                    <br>
                    <a href="mailto:webmaster@lnu.edu.ua">webmaster@lnu.edu.ua</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
</body>
</html>
